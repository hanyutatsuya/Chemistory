/**********************************************************************
 *                                                                    
 *     ＢＭＬ様向け検査システム
 *
 *     システム名：次世代
 *     ファイル名：bml_DBCom.sqc
 *     概要      ：DB共通関数ソースファイル
 **********************************************************************/
#include <stdio.h>
#include <string.h>

#include <sqlca.h>
#include <sqlenv.h>

#include "bml_db.h"
#include "bml_dmm.h"
/*
#include "ifLog.h"	ここは後回し　2005/06/14　長田
*/
#include "bml_DBCom.h"

EXEC SQL INCLUDE SQLCA;
EXEC SQL INCLUDE SQLDA;

EXEC SQL BEGIN DECLARE SECTION;
	char wd_dbname[16];
	char wd_uname[16];
	char wd_pswd[16];
EXEC SQL END DECLARE SECTION;

/******************************************************************************
 *　　　　ZdbConnect()
 * ■機能概要    :　DBコネクト処理
 * ■ＩＮＰＵＴ　
 ******************************************************************************
 *    第１引数   :　char* dbname	   DB名
 *　　第２引数   :　char* uname 	   ユーザ名
 *　　第３引数   :　char* pswd		   パスワード
 * ■ＯＵＴＰＵＴ
 ******************************************************************************
 *    long（エラーコード）
 ******************************************************************************/
long ZdbConnect ( char* dbname, char* uname, char* pswd )
{

	EXEC SQL WHENEVER SQLERROR GO TO error;

	strcpy( wd_dbname, dbname);
	strcpy( wd_uname,  uname);
	strcpy( wd_pswd,   pswd);

	EXEC SQL connect to :wd_dbname user :wd_uname using :wd_pswd ;

	return 0;

	error:
	EXEC SQL WHENEVER SQLERROR CONTINUE;

	ZdbPrintSqlErr( __FILE__, __LINE__, &sqlca );
    return SQLCODE;
}

/******************************************************************************
 *　　　　ZdbDisConnect()
 * ■機能概要    :　DBディスコネクト処理
 * ■ＩＮＰＵＴ　
 *******************************************************************************
 * ■ＯＵＴＰＵＴ
 ******************************************************************************
 *    BOOL
 ******************************************************************************/
BOOL ZdbDisConnect()
{

	EXEC SQL connect reset;			

	return TRUE;
}


/*******************************************************************************
 *　　　　ZdbDbCommit()
 * ■機能概要    :　DBコミット処理
 * ■ＩＮＰＵＴ　
 *******************************************************************************
 * ■ＯＵＴＰＵＴ
 *******************************************************************************
 *******************************************************************************/
void ZdbCommit()
{
	EXEC SQL commit;
}

/*******************************************************************************
 *　　　　ZdbbRollback()
 * ■機能概要    :　ロールバック処理
 * ■ＩＮＰＵＴ　
 *******************************************************************************
 * ■ＯＵＴＰＵＴ
 *******************************************************************************
 *******************************************************************************/
void ZdbRollback()
{
	EXEC SQL ROLLBACK;
}

/*******************************************************************************
 * ZdbPrintSqlErr()
 * ■機能概要    :　　SQLエラーについての詳細情報を表示する。
 * ■ＩＮＰＵＴ　
 *******************************************************************************
 *　　第１引数   :　　　char* file            ソースのファイル名
 *　　第２引数   :　　　int   line            ソースの行番号
 *　　第３引数   :　　　struct sqlca* sqlca   SQLCA 構造体のアドレス
 * ■ＯＵＴＰＵＴ
 *******************************************************************************
 *    なし
 *　　　
 *******************************************************************************
 *******************************************************************************/
void ZdbPrintSqlErr( char* file, int line, struct sqlca* sqlca )
{
	char	sbuff[1024];
	char	sbuff2[1252];
	int		rc;

//	fprintf(stderr, "SQLCODE %d\n", sqlca->sqlcode);
	if(sqlca->sqlcode == 0){
		return;
	}
	rc = sqlogstt(sbuff, 1024, 80, sqlca->sqlstate);
	sprintf ( sbuff2, "<<%s>>,<<%d>>, SQLCODE:%ld, SQLSTATE:%5.5s",
					file, line, sqlca->sqlcode, sqlca->sqlstate );
	if(rc!=0){
		strcat( sbuff2, ", " );
		strcat( sbuff2, sbuff );
	}
/* 後回し　2005/06/14　長田
	ifErrLog( sbuff2 );
	fprintf(stderr, "%s\n", sbuff2);
*/
}

int bmlTestSub( char *a, int *b )
{
	strcpy(a, "abcdef");
	*b = 12;
	return 1;
}
